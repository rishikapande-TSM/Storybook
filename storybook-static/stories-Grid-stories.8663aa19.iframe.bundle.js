"use strict";(self.webpackChunkrishika_storybook=self.webpackChunkrishika_storybook||[]).push([[903],{"./src/stories/Grid.stories.jsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Grid1:()=>Grid1,Grid2:()=>Grid2,Grid3:()=>Grid3,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Grid_stories});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const Grid_Grid=_ref=>{let{children,columns=4,rowGap="16px",columnGap="16px"}=_ref;const gridStyle={display:"grid",gridTemplateColumns:`repeat(${columns}, 1fr)`,gap:`${rowGap} ${columnGap}`};return(0,jsx_runtime.jsx)("div",{style:gridStyle,children})},GridItem=_ref2=>{let{children}=_ref2;return(0,jsx_runtime.jsx)("div",{className:"grid-item",children})};Grid_Grid.__docgenInfo={description:"",methods:[],displayName:"Grid",props:{columns:{defaultValue:{value:"4",computed:!1},required:!1},rowGap:{defaultValue:{value:"'16px'",computed:!1},required:!1},columnGap:{defaultValue:{value:"'16px'",computed:!1},required:!1}}},GridItem.__docgenInfo={description:"",methods:[],displayName:"GridItem"};const Grid_stories={title:"Example/Grid",component:Grid_Grid,argTypes:{columns:{control:{type:"number"},description:"Number of columns in the grid",defaultValue:3},rowGap:{control:{type:"text"},description:"Gap between rows",defaultValue:"16px"},columnGap:{control:{type:"text"},description:"Gap between columns",defaultValue:"16px"}}},Template=args=>(0,jsx_runtime.jsx)(Grid_Grid,{...args,children:Array.from({length:6}).map(((_,index)=>(0,jsx_runtime.jsxs)(GridItem,{children:["Item ",index+1]},index)))}),Grid1=Template.bind({});Grid1.args={columns:3,rowGap:"20px",columnGap:"16px"};const Grid2=Template.bind({});Grid2.args={columns:2,rowGap:"20px",columnGap:"24px"};const Grid3=Template.bind({});Grid3.args={columns:4,rowGap:"13px",columnGap:"8px"};const __namedExportsOrder=["Grid1","Grid2","Grid3"];Grid1.parameters={...Grid1.parameters,docs:{...Grid1.parameters?.docs,source:{originalSource:"args => <Grid {...args}>\r\n    {Array.from({\n    length: 6\n  }).map((_, index) => <GridItem key={index}>Item {index + 1}</GridItem>)}\r\n  </Grid>",...Grid1.parameters?.docs?.source}}},Grid2.parameters={...Grid2.parameters,docs:{...Grid2.parameters?.docs,source:{originalSource:"args => <Grid {...args}>\r\n    {Array.from({\n    length: 6\n  }).map((_, index) => <GridItem key={index}>Item {index + 1}</GridItem>)}\r\n  </Grid>",...Grid2.parameters?.docs?.source}}},Grid3.parameters={...Grid3.parameters,docs:{...Grid3.parameters?.docs,source:{originalSource:"args => <Grid {...args}>\r\n    {Array.from({\n    length: 6\n  }).map((_, index) => <GridItem key={index}>Item {index + 1}</GridItem>)}\r\n  </Grid>",...Grid3.parameters?.docs?.source}}}}}]);