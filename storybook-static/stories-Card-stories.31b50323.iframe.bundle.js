"use strict";(self.webpackChunkrishika_storybook=self.webpackChunkrishika_storybook||[]).push([[561],{"./src/stories/Card.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{WithActions:()=>WithActions,WithContent:()=>WithContent,WithImage:()=>WithImage,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Card_stories});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const Card_Card=_ref=>{let{title,image,content,actions}=_ref;return(0,jsx_runtime.jsxs)("div",{className:"card",children:[image&&(0,jsx_runtime.jsx)("img",{src:image,alt:"Card",className:"card-image"}),(0,jsx_runtime.jsxs)("div",{className:"card-body",children:[title&&(0,jsx_runtime.jsx)("h3",{className:"card-title",children:title}),content&&(0,jsx_runtime.jsx)("p",{className:"card-content",children:content})]}),actions&&(0,jsx_runtime.jsx)("div",{className:"card-actions",children:actions})]})},stories_Card=Card_Card;Card_Card.__docgenInfo={description:"",methods:[],displayName:"Card",props:{title:{description:"",type:{name:"string"},required:!1},image:{description:"",type:{name:"string"},required:!1},content:{description:"",type:{name:"string"},required:!1},actions:{description:"",type:{name:"node"},required:!1}}};const Card_stories={title:"Example/Card",component:stories_Card,argTypes:{title:{control:"text"},image:{control:"text"},content:{control:"text"},actions:{control:"text"}}},Template=args=>(0,jsx_runtime.jsx)(stories_Card,{...args}),WithImage=Template.bind({});WithImage.args={title:"Card with Image",image:"https://www.aceinfoway.com/blog/wp-content/uploads/2020/04/How-to-Build-a-Component-Library.jpg"};const WithContent=Template.bind({});WithContent.args={title:"Card with Content",content:'Storybook is a tool that allows developers to build and test UI components in isolation. It provides a development environment where each component is showcased in various states, making it easy to see how components behave with different inputs. In Storybook, each component has "stories" that display different variations, such as a button in primary, secondary, or disabled states'};const WithActions=Template.bind({});WithActions.args={title:"Card with Actions",content:"This card includes actions such as buttons at the bottom.",actions:(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)("button",{style:{padding:"8px 16px"},children:"Action 1"}),(0,jsx_runtime.jsx)("button",{style:{padding:"8px 16px"},children:"Action 2"})]})};const __namedExportsOrder=["WithImage","WithContent","WithActions"];WithImage.parameters={...WithImage.parameters,docs:{...WithImage.parameters?.docs,source:{originalSource:"args => <Card {...args} />",...WithImage.parameters?.docs?.source}}},WithContent.parameters={...WithContent.parameters,docs:{...WithContent.parameters?.docs,source:{originalSource:"args => <Card {...args} />",...WithContent.parameters?.docs?.source}}},WithActions.parameters={...WithActions.parameters,docs:{...WithActions.parameters?.docs,source:{originalSource:"args => <Card {...args} />",...WithActions.parameters?.docs?.source}}}}}]);